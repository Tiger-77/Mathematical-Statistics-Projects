%录入数据
n=20;
y=[202554.64,182913.88,190390.08,183359.84,172592.77,159604.97,152269.23,140370.03,129209.64,117253.52,103874.43,83101.51,68518.3,61330.35,51321.78,38760.2,31649.29,26396.47,21715.25,18903.64];
y=y';
X1=[440823.2;391980.6;408017.2;377783.1;347326.7;315806.2;286587.8;259487.3;232252.6;
205517.3;179803.8;152083.1;128331.3;110994.6;90638.4;76827.2;66491.7;58004.1;51303.9;47124.6];
X2=[78339.51;71748.23;66066.45;61452.6;58059.76;55659.89;54205.34;51851.12;48943.94;44845.72;40339.62;
35909.07;29983.81;27679.94;24444.68;21522.28;19613.37;18138.36;14870.11;14931.5];
X3=[87092.1;68465.01;65799.04;71608.91;74916.25;71921.43;66187.07;68154.89;68378.91;61910.06;61396.33;53049.66;34542.22;30562.37;27155.18;
19504.44;14802.54;11929.3;8337.24;5784.48];
X4=[293079.31;263947.39;248443.27;225816.86;213943.56;193566.78;180757.47;176713.42;160366.06;
137217.86;116463.32;96031.13;76807.74;62036.81;51043.71;41557.16;34552.1;29021.5;23083.9;18527.2];
X5=[11739;19960;19260;20810;18480;26220;21770;24890;31350;24960;
32470;37430;47210;39990;48990;41090;38820;37110;54510;46950];
X6=[141260;141212;141008;140541;140011;139232;138326;137646;136726;135922;
134916;134091;133450;132802;132129;131448;130756;129988;129227;128453];
X=[ones(n,1),X1,X2,X3,X4,X5,X6];

p=6;
Fout=4.75;   %F(1,n-p-1)=F(1,13)=4.75(取alpha=0.05）
Fin=5;
letin=zeros(p,1);

%进行第一步
maxF=0;
tmpin=0;
for i=2:p+1
    XX=[X(:,1),X(:,i)];
    [tbeta,F]=findF(XX,y,1,n);
    if F>maxF&&F>Fin
        maxF=F;
        tmpin=i;
        maxbeta=tbeta;
    end
end
if tmpin~=0
    letin(tmpin-1)=tmpin;
    fprintf('F值为%d大于Fin，引入变量%d\n',maxF,tmpin-1);
    fprintf('对应的beta矩阵如下\n');
    for tp=1:2
        fprintf('%d\n',maxbeta(tp));
    end
    fprintf('\n');
else
    fprintf('不能引入变量,迭代结束\n');
end
tmpX=[X(:,1),X(:,tmpin)];

for i=1:p-1 
     maxF=0;
     tmpin=0;
    for j=1:p
        if letin(j)~=0  %未考虑的变量
            continue
        end
        XX=[tmpX,X(:,j+1)];
        siz=size(XX,2)-1;
        [tbeta,F,Q,c]=findF(XX,y,siz,n);
        if F>maxF
            if F>Fin
               tmpin=j;
            end
            maxbeta=tbeta;
            maxF=F;
            maxQ=Q;
            maxc=c;
        end
    end
    if tmpin~=0
        fprintf('F值为%d大于Fin，引入变量%d\n',maxF,tmpin);
        fprintf('对应的beta矩阵如下\n');
        for tp=1:siz+1
            fprintf('%d\n',maxbeta(tp));
        end
        fprintf('\n');
        [mini,minf]=checkF(maxbeta,maxQ,maxc,n,siz);
        if minf<Fout
            for kkk=1:p
                if letin(kkk)~=0
                    mini=mini-1;
                end
                if mini==1
                    letin(kkk)=-1;
                    break;
                end
            end
            fprintf('F值为%d小于Fout，不能再引入变量%d\n',minf,kkk);
        end
        letin(tmpin)=tmpin+1;
        tmpX=X(:,1);  %构造新的全函数
        for k=1:p
            if letin(k)~=0&&letin(k)~=-1  %tmpX是按变量名字顺序的
                tmpX=[tmpX,X(:,k+1)];
            end
        end
    else
        fprintf('此时最大的F值为%d\n',maxF);
        fprintf('由于小于Fin，不能引入变量，迭代结束\n');
        break;  %F太小，不进行引入
    end
end 

fprintf('下进行准确性检验\n');
stepwise(X,y,[2,3,4,5,6,7],0.05)